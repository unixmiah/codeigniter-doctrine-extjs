<?php

class PhotoAPI extends ControllerBase {
	
	public function execQuery($query, $isSelect=true){
		$q = Doctrine_Manager::getInstance()->getCurrentConnection();
		$query = $q->execute($query);
        if($isSelect) {
		    return $result = $query->fetchAll();
        }
	}

		    
	/**
     * @remotable
     */
	public function uploadImages($dataSet){
		foreach ($dataSet as $key => $value){
			//upload image
			if(isset($_POST['upload']) && $_FILES['userfile']['size'] > 0){
				$fileName = $_FILES['userfile']['name'];
				$tmpName  = $_FILES['userfile']['tmp_name'];
				$fileSize = $_FILES['userfile']['size'];
				$fileType = $_FILES['userfile']['type'];
				
				$fp      = fopen($tmpName, 'r');
				$content = fread($fp, filesize($tmpName));
				$content = addslashes($content);
				fclose($fp);
				
				if(!get_magic_quotes_gpc())
				{
				    $fileName = addslashes($fileName);
				}
							
				$query = "INSERT INTO `photo_detail` (tag, ext, photo) ".
				"VALUES ('$fileName', '$fileType', '$data')";
				
				//process insert query
				$this->execQuery($query);
				//return uplaod successful message
				//echo "<br>File $fileName uploaded<br>";
			} 
			
		}	    
	} 
		
	
	
	
	/**
     * @remotable
     */
	public function getImagesForActivity($data){
        $actID = $data->activityID;
        $query="SELECT `ID`, `tag`, `ext` FROM `photo_detail` WHERE `actDetailID` =  $actID";
        $result = $this->execQuery($query);	
		$values = array();
        $count = count($result);
        if($count > 0) {
            foreach ($result as $key => $value){
			    if (empty($result)) {
		    	    $data=file_get_contents("images/noImageAvailable.gif");
		  	    } else {
		  		    $ID  = $value['ID'];
		  		    $tag = $value['tag'];
		  		    $storedUrl[] =  array("ID"=>$ID , "tag"=>"".$tag , "url"=>"thumbnail.php?type=ACT&id=".$ID);
		  	    }
		    }
        
            $values['success'] = true;
            $values['items'] = $storedUrl;
        } else {
            $values['success'] = false;
            $values['items'] = array();
        }
				
		return ($values);
	}

	/**
     * @remotable
     */
	public function getImagesForObservation($data){
     $obvID = $data->observationID;
        $query="SELECT `ID`, `tag`, `ext` FROM `photo_detail` WHERE `observDetailID` =  $obvID";
        $result = $this->execQuery($query);	
		$values = array();
        $count = count($result);
        if($count > 0) {
            foreach ($result as $key => $value){
			    if (empty($result)) {
		    	    $data=file_get_contents("images/noImageAvailable.gif");
		  	    } else {
		  		    $ID  = $value['ID'];
		  		    $tag = $value['tag'];
		  		    $storedUrl[] =  array("ID"=>$ID , "tag"=>"".$tag , "url"=>"thumbnail.php?type=OBV&id=".$ID);
		  	    }
		    }
        
            $values['success'] = true;
            $values['items'] = $storedUrl;
        } else {
            $values['success'] = false;
            $values['items'] = array();
        }
				
		return ($values);
    }   
	
	
	
	/**
     * @remotable
     */
	public function emailAttachment($photoID, $actDetailID, $obvDetailID) {
	    $file = $path.$filename;
	    $file_size = filesize($file);
	    $handle = fopen($file, "r");
	    $content = fread($handle, $file_size);
	    fclose($handle);
	    $content = chunk_split(base64_encode($content));
	    $uid = md5(uniqid(time()));
	    $name = basename($file);
	    $header = "From: ".$from_name." <".$from_mail.">\r\n";
	    $header .= "Reply-To: ".$replyto."\r\n";
	    $header .= "MIME-Version: 1.0\r\n";
	    $header .= "Content-Type: multipart/mixed; boundary=\"".$uid."\"\r\n\r\n";
	    $header .= "This is a multi-part message in MIME format.\r\n";
	    $header .= "--".$uid."\r\n";
	    $header .= "Content-type:text/plain; charset=iso-8859-1\r\n";
	    $header .= "Content-Transfer-Encoding: 7bit\r\n\r\n";
	    $header .= $message."\r\n\r\n";
	    $header .= "--".$uid."\r\n";
	    $header .= "Content-Type: application/octet-stream; name=\"".$filename."\"\r\n"; // use different content types here
	    $header .= "Content-Transfer-Encoding: base64\r\n";
	    $header .= "Content-Disposition: attachment; filename=\"".$filename."\"\r\n\r\n";
	    $header .= $content."\r\n\r\n";
	    $header .= "--".$uid."--";
	    if (mail($mailto, $subject, "", $header)) {
	        echo "mail send ... OK"; // or use booleans here
	    } else {
	        echo "mail send ... ERROR!";
	    }
	}
		
	/**
     * @remotable
     */
	public function deleteImage($id){		
		$query = "DELETE FROM photo_detail WHERE ID = $id";
		$result = $this->execQuery($query, false);	
		return array("success"=>true);	
	}
    
    /**
     * @remotable
     */
	public function reNameTagForImage($pid, $newVal){
        if(isset($pid) && isset($newVal)){
		    $query="UPDATE photo_detail SET `tag` = '$newVal' WHERE ID = $pid";
		    $result = $this->execQuery($query, false);	
		    return array("success"=>true);
        }
	}
    
    /**
     * @remotable
     */
	public function assignToObservation($phid, $observID) {
    
        if(isset($phid) && isset($observID)){
		        $query="update `photo_detail` set `observDetailID`=$observID , `actDetailID`=null where `ID` = $phid";
		        $result = $this->execQuery($query, false);	
		        return array("success"=>true,"photoid"=>$phid, "observationid"=> $observID);
           }
    
	}
}	
?>