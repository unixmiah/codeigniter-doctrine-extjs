<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IncidentDetail', 'moqold');

/**
 * BaseIncidentChange
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $ID
 * @property integer $incidentID
 * @property integer $mentalChgInd
 * @property integer $consciousnessChgInd
 * @property integer $bloodGlucoseChgInd
 * @property integer $bloodPressureChngInd
 * @property integer $bloodPressureLow
 * @property integer $bloodPressureHigh
 * @property integer $temperature
 * @property integer $temperatureInd
 * @property integer $rUser
 * @property timestamp $rTime
 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIncidentChange extends Doctrine_Record
{
	public function setTableDefinition()
	{
		$this->setTableName('incident_change');
		$this->hasColumn('ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
		));
		$this->hasColumn('incidentID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
		));
			
		
			$this->hasColumn('mentalChgInd', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('consciousnessChgInd', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('bloodGlucoseChgInd', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('bloodPressureChgInd', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('bloodPressureLow', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('bloodPressureHigh', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		$this->hasColumn('temperature', 'float', 4, array(
             'type' => 'float',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		
		$this->hasColumn('temperatureInd', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
		));
		 $this->hasColumn('rTime', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('rUser', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
	}

	public function setUp()
	{
		parent::setUp();
		
	}
}