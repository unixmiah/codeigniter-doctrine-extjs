<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IncidentDetail', 'moqold');

/**
 * BaseIncidentDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ID
 * @property integer $clientID
 * @property integer $orgID
 * @property timestamp $incidentTime
 * @property integer $locationID
 * @property integer $witnessInd
 * @property integer $witnessUserID
 * @property integer $incidentActivityID
 * @property integer $incidentCauseID
 * @property integer $footwearID
 * @property string $note
 * @property integer $isinER
 * @property integer $notifyPartyID
 * @property integer $isHospitalized
 * @property integer $rUser
 * @property timestamp $rTime
 * @property Client $Client
 * @property FootwearValue $FootwearValue
 * @property IncidentActivityValue $IncidentActivityValue
 * @property IncidentCauseValue $IncidentCauseValue
 * @property LocationValue $LocationValue
 * @property SystemRef $SystemRef
 * @property ContactValue $ContactValue
 * @property Doctrine_Collection $AidDetail
 * @property Doctrine_Collection $IncidentBodypartDetail
 * @property Doctrine_Collection $IncidentChangeDetail
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIncidentDetail extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('incident_detail');
        $this->hasColumn('ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('clientID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('orgID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('incidentTime', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('locationID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('witnessInd', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('witnessUserID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('incidentActivityID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('incidentCauseID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('footwearID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('isinER', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('notifyPartyID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('isHospitalized', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('rUser', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('rTime', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Client', array(
             'local' => 'clientID',
             'foreign' => 'ID'));

        $this->hasOne('FootwearValue', array(
             'local' => 'footwearID',
             'foreign' => 'ID'));

        $this->hasOne('IncidentActivityValue', array(
             'local' => 'incidentActivityID',
             'foreign' => 'ID'));

        $this->hasOne('IncidentCauseValue', array(
             'local' => 'incidentCauseID',
             'foreign' => 'ID'));

        $this->hasOne('LocationValue', array(
             'local' => 'locationID',
             'foreign' => 'ID'));

        $this->hasOne('SystemRef', array(
             'local' => 'notifyPartyID',
             'foreign' => 'ID'));

        $this->hasOne('ContactValue', array(
             'local' => 'witnessUserID',
             'foreign' => 'ID'));

        $this->hasMany('AidDetail', array(
             'local' => 'ID',
             'foreign' => 'incidentID'));

        $this->hasMany('IncidentBodypartDetail', array(
             'local' => 'ID',
             'foreign' => 'incidentDetailID'));

        $this->hasMany('IncidentChangeDetail', array(
             'local' => 'ID',
             'foreign' => 'incidentID'));
    }
}